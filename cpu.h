#ifndef CPU_H
#define CPU_H

#include <iostream>
#include <vector>
#include <string>
#include "graphics.h"

/* system memory map
 *
 * 0x000 - 0x1FF - Chip 8 interpreter (contains font set in emu)
 * 0x050 - 0x0A0 - Used for the built in 4x5 pixel font set (0-F)
 * 0x200 - 0xFFF - Program ROM and work RAM
 *
 * */

class CPU {
    uint8_t mem[4096] {};
    uint16_t opcode {};
    uint8_t v[16] {};
    uint16_t index {};
    uint16_t stack[16] {};
    uint16_t stack_pointer {};

    int font[80] = {
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    };

public:
    uint32_t gfx[64*32] {};
    uint16_t pc {0x200};
    uint8_t key[16] {};
    bool draw_flag {};
    uint8_t delay_timer {};
    uint8_t sound_timer {};

    CPU();

    void print_memory();

    void load_rom(char*);

    void load_font();

    uint16_t fetch_opcode();
    void decode_execute(uint16_t opcode);
    void emu_cycle();

    void timer();

    void debug();

};

#endif
